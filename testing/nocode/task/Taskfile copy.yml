# https://taskfile.dev

version: "3"

output: "prefixed"
# output:
#   group:
#     begin: "[{{.TASK}}]"
#     end: ""

vars:
  GIT_WORKSPACE: /home/test/repositories
  PROJECTS_FILE: projects.yml
  REPO_NAMES:
    sh: yq '.repos.[].name' < "{{.PROJECTS_FILE}}"

tasks:
  default:
    cmds:
      - for: { var: REPO_NAMES }
        cmd: echo "{{.ITEM}}"

  repos:
    cmds:
      - for: { var: REPO_NAMES }
        cmd: echo "{{.ITEM}}"

  git-script:
    vars:
      REPO_NAME: '{{default "" .REPO_NAME}}'
      REPO_CMD: '{{default "" .REPO_CMD}}'
    cmds:
      - bin/git.sh --config "{{.PROJECTS_FILE}}" --workspace "{{.GIT_WORKSPACE}}" --name "{{.REPO_NAME}}" {{.REPO_CMD}} {{.CLI_ARGS}}
    prefix: "bin/git.sh {{REPO_NAME}} {{.REPO_CMD}} {{.CLI_ARGS}}"

  paths:
    vars:
      REPO_PATHS:
        sh: yq '.repos.[].path' < "{{.PROJECTS_FILE}}"
    cmds:
      - for: { var: REPO_PATHS }
        cmd: echo "{{joinPath .GIT_WORKSPACE .ITEM}}"

  status:
    cmds:
      - for: { var: REPO_NAMES }
        task: git-script
        vars:
          REPO_NAME: "{{.ITEM}}"
          REPO_CMD: status

  clone:
    cmds:
      - for: { var: REPO_NAMES }
        task: git-script
        vars:
          REPO_NAME: "{{.ITEM}}"
          REPO_CMD: clone

  fetch:
    cmds:
      - for: { var: REPO_NAMES }
        task: git-script
        vars:
          REPO_NAME: "{{.ITEM}}"
          REPO_CMD: fetch

  pull:
    cmds:
      - for: { var: REPO_NAMES }
        task: git-script
        vars:
          REPO_NAME: "{{.ITEM}}"
          REPO_CMD: pull

  log:
    cmds:
      - for: { var: REPO_NAMES }
        task: git-script
        vars:
          REPO_NAME: "{{.ITEM}}"
          REPO_CMD: log

  push:
    cmds:
      - for: { var: REPO_NAMES }
        task: git-script
        vars:
          REPO_NAME: "{{.ITEM}}"
          REPO_CMD: push

  tag:
    cmds:
      - for: { var: REPO_NAMES }
        task: git-script
        vars:
          REPO_NAME: "{{.ITEM}}"
          REPO_CMD: tag
